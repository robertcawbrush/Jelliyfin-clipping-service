import js from '@eslint/js';
import globals from 'globals';
import reactHooks from 'eslint-plugin-react-hooks';
import reactRefresh from 'eslint-plugin-react-refresh';
import tseslint from 'typescript-eslint';
import prettier from 'eslint-plugin-prettier';

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [
      js.configs.recommended,
      ...tseslint.configs.recommended,
      'plugin:react/recommended',
      'plugin:prettier/recommended',
    ],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
      prettier,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
      'prettier/prettier': 'error',
      'import/extensions': [
        'error',
        'ignorePackages',
        {
          js: 'never',
          jsx: 'never',
          ts: 'never',
          tsx: 'never',
        },
      ],
      'arrow-body-style': 'off',
      'react/function-component-definition': 'off',
      'class-methods-use-this': 'off',
      'arrow-parens': [
        'error',
        'as-needed',
        {
          requireForBlockBody: true,
        },
      ],
      camelcase: 'off',
      'comma-dangle': ['error', 'never'],
      'jsx-a11y/label-has-for': [
        'error',
        {
          required: {
            every: ['id'],
          },
        },
      ],
      'jsx-quotes': ['error', 'prefer-double'],
      'max-len': [
        'error',
        250,
        2,
        {
          ignoreUrls: true,
          ignoreComments: true,
        },
      ],
      'no-multiple-empty-lines': [
        'error',
        {
          max: 2,
          maxEOF: 1,
        },
      ],
      'no-param-reassign': [
        'error',
        {
          props: false,
        },
      ],
      quotes: ['error', 'single'],
      'sort-class-members/sort-class-members': [
        'error',
        {
          order: [
            '[static-properties]',
            '[static-methods]',
            '[lifecycle]',
            '/^on.*$/',
            '[everything-else]',
            '/^render.+$/',
            'render',
          ],
          groups: {
            lifecycle: [
              'displayName',
              'propTypes',
              'contextTypes',
              'childContextTypes',
              'mixins',
              'statics',
              'defaultProps',
              'constructor',
              'getDefaultProps',
              'getInitialState',
              'state',
              'getChildContext',
              'componentWillMount',
              'componentDidMount',
              'componentWillReceiveProps',
              'shouldComponentUpdate',
              'componentWillUpdate',
              'componentDidUpdate',
              'componentWillUnmount',
            ],
          },
        },
      ],
      strict: ['error', 'never'],
      'block-scoped-var': 'warn',
      'dot-notation': 'warn',
      indent: [
        'warn',
        2,
        {
          SwitchCase: 1,
          ignoreComments: true,
        },
      ],
      'no-else-return': 'warn',
      'no-extra-bind': 'warn',
      'no-lone-blocks': 'warn',
      'no-loop-func': 'warn',
      'no-undef': 'warn',
      'no-unused-vars': 'off',
      'vars-on-top': 'warn',
      'array-bracket-spacing': 'off',
      'func-names': 'off',
      'function-paren-newline': 'off',
      'import/no-cycle': 'off',
      'jsx-a11y/label-has-associated-control': 'off',
      'jsx-a11y/control-has-associated-label': 'off',
      'key-spacing': 'off',
      'no-console': 'off',
      'no-multi-spaces': 'off',
      'no-restricted-globals': 'off',
      'no-underscore-dangle': 'off',
      'object-curly-newline': 'off',
      'object-curly-spacing': 'warn',
      'one-var': 'off',
      'operator-linebreak': 'off',
      'padded-blocks': 'off',
      'prefer-const': 'warn',
      'prefer-destructuring': 'off',
      'prefer-object-spread': 'off',
      'prefer-promise-reject-errors': 'off',
      'no-plusplus': 'off',
      'react/button-has-type': 'off',
      'react/default-props-match-prop-types': 'off',
      'react/destructuring-assignment': 'off',
      'react/forbid-prop-types': 'off',
      'react/jsx-closing-tag-location': 'off',
      'react/jsx-closing-bracket-location': 'off',
      'react/jsx-filename-extension': 'off',
      'react/jsx-fragments': 'off',
      'react/jsx-no-bind': 'off',
      'react/jsx-one-expression-per-line': 'off',
      'react/no-access-state-in-setstate': 'off',
      'react/no-unused-state': 'off',
      'react/prefer-stateless-function': 'off',
      'react/prop-types': 'off',
      'react/jsx-props-no-spreading': 'off',
      'react/static-property-placement': ['warn', 'static public field'],
      'space-before-function-paren': 'off',
      'space-in-parens': 'off',
      'spaced-comment': 'off',
      'no-spaced-func': 'off',
      'func-call-spacing': 'off',
      'linebreak-style': ['error', 'unix'],
      'no-shadow': 'off',
      '@typescript-eslint/no-unused-vars': [
        'error',
        {
          varsIgnorePattern: 'React',
        },
      ],
      '@typescript-eslint/no-shadow': 'error',
      'react/require-default-props': 'off',
      'react/no-unstable-nested-components': 'off',
      'import/no-extraneous-dependencies': 'off',
      'import/prefer-default-export': 'off',
      '@typescript-eslint/ban-ts-comment': 'off',
      'react/no-array-index-key': 'off',
      'array-callback-return': 'off',
      'consistent-return': 'off',
      '@typescript-eslint/no-explicit-any': 'off',
      'no-trailing-spaces': 'error',
    },
  },
);
